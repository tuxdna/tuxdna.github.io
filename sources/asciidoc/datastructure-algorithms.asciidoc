
[[algorithms]]
Algorithms
----------

[[binary-search-tree]]
Binary Search Tree:
~~~~~~~~~~~~~~~~~~~

* Insert
* Minimum and Maximum
* Floor and ceiling
* Selection - find the key k at rank r
* Rank - find the rank r of key k
* Delete Minimum and Delete Maximum
* Delete

[[treee]]
2-3 treee
~~~~~~~~~

* 2 node - 1 key, 2 links
* 3 node - 2 keys, 3 links
* temporary 4 node - 3 keys, 4 links
* during insertion
* 2 node case is simple i.e. convert it into a 3 node
* 3 node get converted to a 4 node, of which middle key propagates to
parent node, all the way up until it is 4 node is not formed. on
reaching root node, the root node is split.

[[red-black-tree]]
Red Black tree
~~~~~~~~~~~~~~

* an extension of 2-3-4 tree represented in terms of a binary tree

[[sparse-matrix]]
Sparse Matrix
~~~~~~~~~~~~~

*
http://www.cs.indiana.edu/classes/p573/notes/sparse/sparsemat.html[Sparse
Matrix Data Structures]

[[graph]]
Graph
~~~~~

* http://en.wikipedia.org/wiki/Graph_isomorphism[Graph Isomorphism]

